- name: "install gem dependencies"
  apt:
    pkg:
      - imagemagick
      - libmagickwand-dev
      - libmysqlclient-dev
    state: present

- name: "create root {{ app_root }} directory"
  file:
    path: "{{ app_root }}"
    state: directory
    mode: 0755
    owner: "{{ app_user }}"

- name: "create app root directory"
  with_items: "{{ rails_apps }}"
  file:
    path: "{{ app_root }}/{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ app_user }}"

- name: "create convenience symlink in home to {{ app_root }} directory"
  file:
    src: "{{ app_root }}"
    dest: "/home/{{ app_user }}/apps"
    owner: "{{ app_user }}"
    state: link

- name: "create app config directory"
  with_items: "{{ rails_apps }}"
  file:
    path: "{{ app_root }}/{{ item }}/shared/config"
    state: directory
    recurse: true
    mode: 0755
    owner: "{{ app_user }}"

- name: "create files from vault"
  with_subelements:
    - "{{ vault_rails }}"
    - "yaml_files"
  no_log: true
  copy:
    dest: "{{ app_root }}/{{ item.0.name }}/shared/config/{{ item.1.filename }}"
    content: "{{ item.1.content | to_nice_yaml }}"
    mode: 0755
    owner: "{{ app_user }}"

- name: "create app public directory"
  with_items: "{{ rails_apps }}"
  file:
    path: "{{ app_root }}/{{ item }}/shared/public"
    state: directory
    recurse: true
    mode: 0755
    owner: "{{ app_user }}"

- name: "create app .well-known directory"
  with_items: "{{ rails_apps }}"
  file:
    path: "{{ app_root }}/{{ item }}/shared/public/.well-known"
    state: directory
    recurse: true
    mode: 0755
    owner: "{{ app_user }}"

- name: "create systemd file for puma"
  with_items: "{{ rails_apps }}"
  template:
    src: puma.j2
    dest: "/etc/systemd/system/puma-{{ item }}.service"
    owner: root
    group: root
    mode: 0755

- name: "update systemd to recognize changed files"
  with_items: "{{ rails_apps }}"
  shell: "systemctl daemon-reload"
  become: true

- name: "restart puma"
  with_items: "{{ rails_apps }}"
  become: true
  ignore_errors: true
  args:
    warn: false
  shell: "service puma-{{ item }} restart"

- name: "create nginx vhost files for rails apps"
  with_items: "{{ rails_apps }}"
  copy:
    src: "nginx/{{ item }}.conf"
    dest: "/etc/nginx/sites-available/{{ item }}.conf"
    mode: 0755
    owner: "{{ app_user }}"
  notify:
    - reload nginx

- name: "symlink enabled vhosts for nginx rails apps"
  with_items: "{{ rails_apps }}"
  file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    owner: "{{ app_user }}"
    state: link
  notify:
    - reload nginx
